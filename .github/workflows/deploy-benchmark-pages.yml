name: Deploy Benchmark Pages

on:
  workflow_run:
    workflows: ["Benchmarks"]
    types:
      - completed

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy-pages:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout gh-benchmark-pages branch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: gh-benchmark-pages
          persist-credentials: false

      # 2️⃣ Download benchmark artifacts from previous workflow
      - name: Download benchmark artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: success
          name: benchmark-results
          path: benchmarks/results

      # 3️⃣ Copy results to historical folder
      - name: Save historical benchmark results
        run: |
          timestamp=$(date -u +"%Y%m%d-%H%M%S")
          mkdir -p src/history/$timestamp
          cp -r benchmarks/results/* src/history/$timestamp/
          echo "TIMESTAMP=$timestamp" >> $GITHUB_ENV

      # 4️⃣ Generate index.html from template
      - name: Generate dashboard from template
        run: |
          rows=""
          for dir in src/history/*; do
              ts=$(basename "$dir")
              html_file="history/$ts/DotNetDev.AspNetCore.Http.Benchmarks.Benchmarks-report.html"
              if [ -f "src/$html_file" ]; then
                  rows+="<tr><td>$ts</td><td><a href='$html_file'>View Report</a></td></tr>"
              fi
          done

          # inject rows into template
          sed "s|<!--TABLE_ROWS-->|$rows|" src/index.template.html > src/index.html

      # 5️⃣ Commit updated history + index.html back to branch
      - name: Commit historical results
        run: |
          git config user.name "github-action-benchmark"
          git config user.email "github@users.noreply.github.com"
          git add src/history src/index.html
          git commit -m "Add benchmark results for ${{ env.TIMESTAMP }}" || echo "No changes to commit"
